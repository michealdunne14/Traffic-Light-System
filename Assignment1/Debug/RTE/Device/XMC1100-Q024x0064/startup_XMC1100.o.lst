   1              	# 1 "../RTE/Device/XMC1100-Q024x0064/startup_XMC1100.s"
   1              	;**************************************************************************************************
   0              	
   0              	
   0              	
   2              	;* @file     startup_XMC1100.s
   3              	;* @brief    CMSIS Core Device Startup File for Infineon XMC1100 Device Series
   4              	;* @version  V1.4
   5              	;* @date     03 Sep 2015
   6              	;*
   7              	;* @cond
   8              	;**************************************************************************************************
   9              	;* Copyright (c) 2013-2016, Infineon Technologies AG
  10              	;* All rights reserved.                        
  11              	;*                                             
  12              	;* Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13              	;* following conditions are met:   
  14              	;*                                                                              
  15              	;* Redistributions of source code must retain the above copyright notice, this list of conditions a
  16              	;* disclaimer.                        
  17              	;* 
  18              	;* Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19              	;* disclaimer in the documentation and/or other materials provided with the distribution.          
  20              	;* 
  21              	;* Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22              	;* products derived from this software without specific prior written permission.                  
  23              	;*                                                                              
  24              	;* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25              	;* INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26              	;* DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27              	;* SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28              	;* SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29              	;* WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30              	;* OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31              	;*                                                                              
  32              	;* To improve the quality of the software, users are encouraged to share modifications, enhancement
  33              	;* Infineon Technologies AG dave@infineon.com).                                                    
  34              	;**************************************************************************************************
  35              	;*
  36              	;**************************** Change history ********************************
  37              	;* V1.0, Jan, 21, 2013 TYS:Startup file for XMC1
  38              	;* V1.1, Jul, 17, 2013 TYS:remove redundant vector table
  39              	;* V1.2, Nov, 25, 2014 JFT:Removed DAVE3 dependency. 
  40              	;*                         Default handler used for all IRQs
  41              	;* V1.3, Dec, 11, 2014 JFT:Default clocking changed, MCLK=32MHz and PCLK=64MHz
  42              	;* V1.4, Sep, 03, 2015 JFT:SSW default clocking changed, MCLK=8MHz and PCLK=16MHz avoid problems wi
  43              	;*
  44              	;* @endcond 
  45              	;*
  46              	
  47              	; ------------------ <<< Use Configuration Wizard in Context Menu >>> ------------------
  48              	           
  49              	           
  50              	; <h> Stack Configuration
  51              	;   <o> Stack Size (in Bytes) <0x0-0xFFFFFFFF:8>
  52              	; </h>
  53              	
  54              	Stack_Size      EQU     0x00000400
  55              	
  56              	                AREA    STACK, NOINIT, READWRITE, ALIGN=3
  57              	Stack_Mem       SPACE   Stack_Size
  58              	__initial_sp
  59              	
  60              	
  61              	; <h> Heap Configuration
  62              	;   <o>  Heap Size (in Bytes) <0x0-0xFFFFFFFF:8>
  63              	; </h>
  64              	
  65              	Heap_Size       EQU     0x00000200
  66              	
  67              	                AREA    HEAP, NOINIT, READWRITE, ALIGN=3
  68              	__heap_base
  69              	Heap_Mem        SPACE   Heap_Size
  70              	__heap_limit
  71              	
  72              	; <h> Clock system handling by SSW
  73              	;   <h> CLK_VAL1 Configuration
  74              	;    <o0.0..7>    FDIV Fractional Divider Selection
  75              	;    <i> Deafult: 0. Fractional part of clock divider, MCLK = DCO1 / (2 x (IDIV + (FDIV / 256)))
  76              	;    <o0.8..15>   IDIV Divider Selection (limited to 1-16)
  77              	;                    <0=> Divider is bypassed
  78              	;                    <1=> MCLK = 32 MHz
  79              	;                    <2=> MCLK = 16 MHz
  80              	;                    <3=> MCLK = 10.67 MHz
  81              	;                    <4=> MCLK = 8 MHz
  82              	;                    <254=> MCLK = 126 kHz
  83              	;                    <255=> MCLK = 125.5 kHz
  84              	;    <i> Deafult: 4. Interger part of clock divider, MCLK = DCO1 / (2 x (IDIV + (FDIV / 256))) = 8M
  85              	;    <o0.16>      PCLKSEL PCLK Clock Select
  86              	;                    <0=> PCLK = MCLK
  87              	;                    <1=> PCLK = 2 x MCLK
  88              	;    <i> Deafult: 2 x MCLK
  89              	;    <o0.17..19>  RTCCLKSEL RTC Clock Select
  90              	;                    <0=> 32.768kHz standby clock
  91              	;                    <1=> 32.768kHz external clock from ERU0.IOUT0
  92              	;                    <2=> 32.768kHz external clock from ACMP0.OUT
  93              	;                    <3=> 32.768kHz external clock from ACMP1.OUT
  94              	;                    <4=> 32.768kHz external clock from ACMP2.OUT
  95              	;                    <5=> Reserved
  96              	;                    <6=> Reserved
  97              	;                    <7=> Reserved
  98              	;    <i> Deafult: 32.768kHz standby clock 
  99              	;    <o0.31>      do not move CLK_VAL1 to SCU_CLKCR[0..19]
 100              	;   </h>
 101              	CLK_VAL1_Val    EQU     0x00010400      
 102              	
 103              	;   <h> CLK_VAL2 Configuration
 104              	;    <o0.0>    disable VADC and SHS Gating
 105              	;    <o0.1>    disable CCU80 Gating
 106              	;    <o0.2>    disable CCU40 Gating
 107              	;    <o0.3>    disable USIC0 Gating
 108              	;    <o0.4>    disable BCCU0 Gating
 109              	;    <o0.5>    disable LEDTS0 Gating
 110              	;    <o0.6>    disable LEDTS1 Gating
 111              	;    <o0.7>    disable POSIF0 Gating
 112              	;    <o0.8>    disable MATH Gating
 113              	;    <o0.9>    disable WDT Gating
 114              	;    <o0.10>   disable RTC Gating
 115              	;    <o0.31>   do not move CLK_VAL2 to SCU_CGATCLR0[0..10]
 116              	;  </h>
 117              	; *****************************************************************************/
 118              	CLK_VAL2_Val    EQU     0x80000000      
 119              	; </h>
 120              	
 121              	                PRESERVE8
 122              	                THUMB
 123              	
 124              	; Vector Table Mapped to Address 0 at Reset
 125              	
 126              	                AREA    RESET, DATA, READONLY
 127              	                EXPORT  __Vectors
 128              	                EXPORT  __Vectors_End
 129              	                EXPORT  __Vectors_Size
 130              	
 131              	__Vectors       DCD     __initial_sp              ; Top of Stack
 132              	                DCD     Reset_Handler             ; Reset Handler
 133              	                DCD     0                         ; Reserved
 134              	                DCD     0                         ; Reserved
 135              	                DCD     CLK_VAL1_Val              ; CLK_VAL1
 136              	                DCD     CLK_VAL2_Val              ; CLK_VAL2
 137              	__Vectors_End
 138              	
 139              	__Vectors_Size  EQU     __Vectors_End - __Vectors
 140              	
 141              	                AREA    |.text|, CODE, READONLY
 142              	
 143              	
 144              	; Reset Handler
 145              	
 146              	Reset_Handler   PROC
 147              	                EXPORT  Reset_Handler             [WEAK]
 148              	                IMPORT  SystemInit
 149              	                IMPORT  __main
 150              	                
 151              	; Following code initializes the Veneers at address 0x20000000 with a "branch to itself"
 152              	; The real veneers will be copied later from the scatter loader before reaching main.
 153              	; This init code should handle an exception before the real veneers are copied.
 154              	SRAM_BASE            EQU     0x20000000
 155              	VENEER_INIT_CODE     EQU     0xE7FEBF00             ; NOP, B .
 156              	
 157 ???? 0849     	                LDR     R1, =SRAM_BASE
 158 ???? 094A     	                LDR     R2, =VENEER_INIT_CODE                
 159 ???? 3020     	                MOVS    R0, #48                     ; Veneer 0..47
****  Error:bad instruction `veneer 0..47'
 160              	Init_Veneers
 161 ???? 0A60     	                STR     R2, [R1]
 162              	                ADDS    R1, #4
 163              	                SUBS    R0, R0, #1
 164 ???? FED1     	                BNE     Init_Veneers
 165              	                
 166 ???? 0848     	                LDR     R0, =SystemInit
 167 ???? 8047     	                BLX     R0
 168 ???? 0848     	                LDR     R0, =__main
 169 ???? 0047     	                BX      R0
 170              	                ENDP
 171              	
 172              	Default_Handler PROC
 173              	
 174              	                EXPORT  HardFault_Handler       [WEAK]
 175              	                EXPORT  SVC_Handler             [WEAK]
 176              	                EXPORT  PendSV_Handler          [WEAK]
 177              	                EXPORT  SysTick_Handler         [WEAK]
 178              	                EXPORT  SCU_0_IRQHandler        [WEAK]
 179              	                EXPORT  SCU_1_IRQHandler        [WEAK]
 180              	                EXPORT  SCU_2_IRQHandler        [WEAK]
 181              	                EXPORT  ERU0_0_IRQHandler       [WEAK]
 182              	                EXPORT  ERU0_1_IRQHandler       [WEAK]
 183              	                EXPORT  ERU0_2_IRQHandler       [WEAK]
 184              	                EXPORT  ERU0_3_IRQHandler       [WEAK]
 185              	                EXPORT  USIC0_0_IRQHandler      [WEAK]
 186              	                EXPORT  USIC0_1_IRQHandler      [WEAK]
 187              	                EXPORT  USIC0_2_IRQHandler      [WEAK]
 188              	                EXPORT  USIC0_3_IRQHandler      [WEAK]
 189              	                EXPORT  USIC0_4_IRQHandler      [WEAK]
 190              	                EXPORT  USIC0_5_IRQHandler      [WEAK]
 191              	                EXPORT  VADC0_C0_0_IRQHandler   [WEAK]
 192              	                EXPORT  VADC0_C0_1_IRQHandler   [WEAK]
 193              	                EXPORT  CCU40_0_IRQHandler      [WEAK]
 194              	                EXPORT  CCU40_1_IRQHandler      [WEAK]
 195              	                EXPORT  CCU40_2_IRQHandler      [WEAK]
 196              	                EXPORT  CCU40_3_IRQHandler      [WEAK]
 197              	
 198              	HardFault_Handler       
 199              	SVC_Handler             
 200              	PendSV_Handler          
 201              	SysTick_Handler         
 202              	SCU_0_IRQHandler        
 203              	SCU_1_IRQHandler        
 204              	SCU_2_IRQHandler        
 205              	ERU0_0_IRQHandler       
 206              	ERU0_1_IRQHandler       
 207              	ERU0_2_IRQHandler       
 208              	ERU0_3_IRQHandler       
 209              	USIC0_0_IRQHandler      
 210              	USIC0_1_IRQHandler      
 211              	USIC0_2_IRQHandler      
 212              	USIC0_3_IRQHandler      
 213              	USIC0_4_IRQHandler      
 214              	USIC0_5_IRQHandler      
 215              	VADC0_C0_0_IRQHandler   
 216              	VADC0_C0_1_IRQHandler   
 217              	CCU40_0_IRQHandler      
 218              	CCU40_1_IRQHandler      
 219              	CCU40_2_IRQHandler      
 220              	CCU40_3_IRQHandler      
 221 ???? FEE7     	                B       .
 222              	
 223              	                ENDP
 224              	
 225              	
 226              	                ALIGN
 227              	
 228              	
 229              	; User Initial Stack & Heap
 230              	
 231              	                IF      :DEF:__MICROLIB
 232              	
 233              	                EXPORT  __initial_sp
 234              	                EXPORT  __heap_base
 235              	                EXPORT  __heap_limit
 236              	
 237              	                ELSE
 238              	
 239              	                IMPORT  __use_two_region_memory
 240              	                EXPORT  __user_initial_stackheap
 241              	
 242              	__user_initial_stackheap PROC
 243 ???? 0748     	                LDR     R0, =  Heap_Mem
 244              	                LDR     R1, =(Stack_Mem + Stack_Size)
 245              	                LDR     R2, = (Heap_Mem +  Heap_Size)
 246 ???? 084B     	                LDR     R3, = Stack_Mem
 247 ???? 7047     	                BX      LR
 248              	                ENDP
 249              	
 250              	                ALIGN
 251              	
 252              	                ENDIF
 253              	
 254              	
 255              	;* ================== START OF INTERRUPT HANDLER VENEERS ==================== */
 256              	; Veneers are located to fix SRAM Address 0x2000'0000
 257              	                AREA    |.ARM.__at_0x20000000|, CODE, READWRITE
 258              	
 259              	; Each Veneer has exactly a lengs of 4 Byte
 260              	
 261              	                MACRO
 262              	                STAYHERE $IrqNumber
 263 ???? 0848     	                LDR  R0, =$IrqNumber
 264 ???? FEE7     	                B    .
 265              	                MEND
 266              	
 267              	                MACRO
 268              	                JUMPTO $Handler
 269 ???? 0848     	                LDR  R0, =$Handler
 270 ???? 0047     	                BX   R0
 271              	                MEND
 272              	
 273              	                STAYHERE 0x0                          ;* Reserved
 274              	                STAYHERE 0x1                          ;* Reserved 
 275              	                STAYHERE 0x2                          ;* Reserved 
 276              	                JUMPTO   HardFault_Handler            ;* HardFault Veneer  
 277              	                STAYHERE 0x4                          ;* Reserved 
 278              	                STAYHERE 0x5                          ;* Reserved 
 279              	                STAYHERE 0x6                          ;* Reserved 
 280              	                STAYHERE 0x7                          ;* Reserved 
 281              	                STAYHERE 0x8                          ;* Reserved 
 282              	                STAYHERE 0x9                          ;* Reserved 
 283              	                STAYHERE 0xA                          ;* Reserved
 284              	                JUMPTO   SVC_Handler                  ;* SVC Veneer        
 285              	                STAYHERE 0xC                          ;* Reserved
 286              	                STAYHERE 0xD                          ;* Reserved
 287              	                JUMPTO   PendSV_Handler               ;* PendSV Veneer     
 288              	                JUMPTO   SysTick_Handler              ;* SysTick Veneer    
 289              	                JUMPTO   SCU_0_IRQHandler             ;* SCU_0 Veneer      
 290              	                JUMPTO   SCU_1_IRQHandler             ;* SCU_1 Veneer      
 291              	                JUMPTO   SCU_2_IRQHandler             ;* SCU_2 Veneer      
 292              	                JUMPTO   ERU0_0_IRQHandler            ;* SCU_3 Veneer      
 293              	                JUMPTO   ERU0_1_IRQHandler            ;* SCU_4 Veneer      
 294              	                JUMPTO   ERU0_2_IRQHandler            ;* SCU_5 Veneer      
 295              	                JUMPTO   ERU0_3_IRQHandler            ;* SCU_6 Veneer      
 296              	                STAYHERE 0x17                         ;* Reserved  
 297              	                STAYHERE 0x18                         ;* Reserved
 298              	                JUMPTO   USIC0_0_IRQHandler           ;* USIC0_0 Veneer    
 299              	                JUMPTO   USIC0_1_IRQHandler           ;* USIC0_1 Veneer    
 300              	                JUMPTO   USIC0_2_IRQHandler           ;* USIC0_2 Veneer    
 301              	                JUMPTO   USIC0_3_IRQHandler           ;* USIC0_3 Veneer    
 302              	                JUMPTO   USIC0_4_IRQHandler           ;* USIC0_4 Veneer    
 303              	                JUMPTO   USIC0_5_IRQHandler           ;* USIC0_5 Veneer    
 304              	                JUMPTO   VADC0_C0_0_IRQHandler        ;* VADC0_C0_0 Veneer 
 305              	                JUMPTO   VADC0_C0_1_IRQHandler        ;* VADC0_C0_1 Veneer 
 306              	                STAYHERE 0x21                         ;* Reserved
 307              	                STAYHERE 0x22                         ;* Reserved
 308              	                STAYHERE 0x23                         ;* Reserved
 309              	                STAYHERE 0x24                         ;* Reserved
 310              	                JUMPTO   CCU40_0_IRQHandler           ;* CCU40_0 Veneer    
 311              	                JUMPTO   CCU40_1_IRQHandler           ;* CCU40_1 Veneer    
 312              	                JUMPTO   CCU40_2_IRQHandler           ;* CCU40_2 Veneer    
 313              	                JUMPTO   CCU40_3_IRQHandler           ;* CCU40_3 Veneer    
 314              	                STAYHERE 0x29                         ;* Reserved 
 315              	                STAYHERE 0x2A                         ;* Reserved  
 316              	                STAYHERE 0x2B                         ;* Reserved 
 317              	                STAYHERE 0x2C                         ;* Reserved
 318              	                STAYHERE 0x2D                         ;* Reserved
 319              	                STAYHERE 0x2E                         ;* Reserved
 320              	                STAYHERE 0x2F                         ;* Reserved
 321              	
 322              	                ALIGN
 323              	
 324              	;* ================== END OF INTERRUPT HANDLER VENEERS ====================== */
 325              	
 326 ???? 00000000 	                END
****  Error:bad instruction `end'
 326      00000000 
 326      00000000 
 326      00000000 
 326      00000000 
DEFINED SYMBOLS
../RTE/Device/XMC1100-Q024x0064/startup_XMC1100.s:157    .text:00000000 $t
../RTE/Device/XMC1100-Q024x0064/startup_XMC1100.s:231    .text:00000014 IF
../RTE/Device/XMC1100-Q024x0064/startup_XMC1100.s:231    .text:00000014 DEF
../RTE/Device/XMC1100-Q024x0064/startup_XMC1100.s:326    .text:00000022 $d
                   .debug_aranges:0000000c $d

UNDEFINED SYMBOLS
SRAM_BASE
VENEER_INIT_CODE
Init_Veneers
SystemInit
__main
Heap_Mem
Stack_Mem
Stack_Size
Heap_Size
$IrqNumber
$Handler
